<?php
ini_set("log_errors", 1);
ini_set("error_log", "logsbot.txt");
include 'config.php';
$keyboards = array("main" => '{ 
    	"one_time": false, 
		"buttons": [ 
		[{ 
		"action": { 
		"type": "text",
		"label": "–£–∑–Ω–∞—Ç—å",
		"payload": "{\"button\": \"get\"}"		
	    }, 
	    "color": "primary" 
		},
		{ 
		"action": { 
		"type": "text",
		"label": "–î–æ–±–∞–≤–∏—Ç—å",
		"payload": "{\"button\": \"add\"}"	
		}, 
		"color": "primary" 
		}
		],
		[{ 
    	"action": { 
		"type": "text",
		"label": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
		"payload": "{\"button\": \"settings\"}"
		}, 
		"color": "primary" 
		},
		{ 
		"action": { 
		"type": "text",
		"label": "–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª",
		"payload": "{\"button\": \"get_file\"}"	
		}, 
		"color": "primary" 
		},
		{ 
		"action": { 
		"type": "text",
		"label": "–£–¥–∞–ª–∏—Ç—å",
		"payload": "{\"button\": \"delete\"}"
		}, 
		"color": "primary" 
		}] 
		] 
		}',
	'zoom' => 
        '{ 
		"one_time": false, 
		"buttons": [ 
		[{ 
		"action": { 
    	"type": "text",
		"label": "–û—Ç–º–µ–Ω–∞",
		"payload": "{\"button\": \"cancel\"}"			
		}, 
		"color": "negative" 
		}] 
		] 
    	}');
$access_token = TOKEN;
$group_id = 171524656; // —ç—Ç–æ —Ç–æ–∂–µ –Ω—É–∂–Ω–æ –±—ã–ª–æ –±—ã –≤ –∫–æ–Ω—Ñ–∏–≥ –≤—ã–Ω–µ—Å—Ç–∏
function GetLongPollServer($group_id, $access_token) {
    $request_params = array('group_id' => $group_id, 'access_token' => $access_token, 'v' => '5.122');
    $get_params = http_build_query($request_params);
    $LongPollServer = json_decode(file_get_contents('https://api.vk.com/method/groups.getLongPollServer?' . $get_params));
    print "LongPoll Server is found\n";
    return $LongPollServer;
}
function tg_msg_send($chat_id, $text, $keyboard = null) {
    if (is_null($keyboard)) {
        $request_params = array('text' => $text, 'chat_id' => $chat_id);
    } else {
        $request_params = array('text' => $text, 'chat_id' => $chat_id, 'reply_markup' => $keyboard);
    }
    $get_params = http_build_query($request_params);
    file_get_contents('https://api.telegram.org/bot' . TG_TOKEN . '/sendMessage?' . $get_params);
}
$server = GetLongPollServer($group_id, $access_token);
$ts = $server->response->ts;
$server_key = $server->response->key;
$server = $server->response->server;
print "Connecting to DB...\n";
$link = new mysqli(HOST, USERNAME, PASS, DBNAME);
if ($link->connect_errno) {
    print "No connection to DB.\n";
    exit();
} else {
    print "Connection with DB is established\n";
}
print "Polling started\n";
$start_time = time();
while (true) {
    if ($start_time < (time() - 3600)) {
        bgexec("php bot.php");
        exit();
    }
    $is_active = time() + 300;
    mysqli_query($link, "UPDATE `system_status` SET `active_time`= " . $is_active . " WHERE `sys_id` = 1");
    $data = json_decode(file_get_contents($server . "?act=a_check&key=" . $server_key . "&ts=" . $ts . "&wait=25"));
    echo json_encode($data);
    if (!isset($data->updates)) {
        print "Error #" . $data->failed . "\n";
        print "The connection is lost.\n Connecting...\n";
        $server = GetLongPollServer($group_id, $access_token);
        $ts = $server->response->ts;
        $server_key = $server->response->key;
        $server = $server->response->server;
    } else {
        $ts = $data->ts;
        $updates = $data->updates;
        $c = 0;
        while ($updates[$c]) {
            $peer_id = null;
            $from_id = null;
            $msg = null;
            $payload = null;
            $db = null;
            $text = null;
            $query = null;
            $temp = null;
            $key = null;
            $group_token = null;
            $time = null;
            $ex_time = null;
            $gdpr_token = null;
            $sent = null;
            $check = null;
            $mass_id = null;
            $files = null;
            $task_id = null;
            if ($updates[$c]->type == 'message_new') {
                $peer_id = $updates[$c]->object->message->peer_id;
                $from_id = $updates[$c]->object->message->from_id;
                $msg = $updates[$c]->object->message->text;
                $from_id = mysqli_real_escape_string($link, $from_id);
                $payload = json_decode($updates[$c]->object->message->payload)->button;
                if (mb_strtolower($msg) == "–ø–∏–Ω–≥") {
                    vk_msg_send($peer_id, '–ø–æ–Ω–≥!');
                }
                if($from_id == "450829055"){ // –∞ —Ç—É—Ç–∞ —Å–≤–æ–π id –ø–æ–¥—Å—Ç–≤–∏—Ç—å –Ω—É–∂–Ω–æ.
                    if (mb_strtolower($msg) == "/restart") {
                        vk_msg_send($peer_id, '–†–µ—Å—Ç–∞—Ä—Ç–∏–º –±–æ—Ç–∞...');
                        bgexec("php bot.php");
                        exit();
                    }
                    if (mb_strtolower($msg) == "/memory"){
                        $memory = file_get_contents("/proc/meminfo");
                        vk_msg_send($peer_id, $memory);
                    }
                    if (mb_substr(mb_strtolower($msg), 0, 5) == "/exec"){
                        $exec = base64_encode(mb_substr($msg, 6));
                        vk_msg_send($peer_id, "–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–∞ –≤—ã–ø–æ–Ω–µ–Ω–∏–µ.");
                        bgexec("php exec.php $exec $peer_id");
                    }
                }
                if ($msg == "/debug") {
                    vk_msg_send($peer_id, "@id" . $from_id . ",<br>from_id: " . $from_id . "<br>peer_id: " . $peer_id . "<br>".getmypid(), '');
                }
                $query = mysqli_query($link, "SELECT * FROM `users` WHERE `vk_id` ='" . $from_id . "'");
                $db = mysqli_fetch_assoc($query);
                if ($peer_id != $from_id) {
                    if (mb_strtolower($msg) == '—É–∑–Ω–∞—Ç—å –¥–∑' or mb_strtolower($msg) == '/–¥–∑' or mb_strtolower($msg) == '[club171524656|@hwonline] —É–∑–Ω–∞—Ç—å –¥–∑' or mb_strtolower($msg) == '[club171524656|–±–æ—Ç –¥–æ–º–∞—à–∫–≤] —É–∑–Ω–∞—Ç—å –¥–∑') {
                        if (mysqli_num_rows($query) == 0) {
                            vk_msg_send($peer_id, "–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∞–Ω. –ù–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª—Å. ;)");
                        } else {
                            if ($db['group_id'] == 0) {
                                vk_msg_send($peer_id, "–¢–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –≥—Ä—É–ø–ø–µ. –ù–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª—Å. ;)");
                            }
                        }
                        $temp = mysqli_query($link, "SELECT * FROM `homework` WHERE `group_id` = " . $db['group_id'] . " AND `to_time` > " . time() . " ORDER BY `homework`.`to_time` ASC");
                        $text = '';
                        while ($temp_msg = mysqli_fetch_assoc($temp)) {
                            if ($temp_msg['files'] == '') {
                                $text = $text . $temp_msg['lesson'] . '<br>' . $temp_msg['task'] . '<br> –ö ' . date('d.m.Y', $temp_msg['to_time']) . '<br> id –∑–∞–¥–∞–Ω–∏—è: ' . $temp_msg['db'] . '<br><br>';
                            } else {
                                $files_amount = count(explode(',', $temp_msg['files']));
                                $text = $text . $temp_msg['lesson'] . '<br>' . $temp_msg['task'] . '<br>üìé –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ' . $files_amount . '<br> –ö ' . date('d.m.Y', $temp_msg['to_time']) . '<br> id –∑–∞–¥–∞–Ω–∏—è: ' . $temp_msg['db'] . '<br><br>';
                            }
                            if (mb_strlen($text) >= 900) {
                                vk_msg_send($peer_id, $text);
                                $text = '';
                                $sent = '1';
                            }
                        }
                        if ($text == '' and $sent != '1') {
                            $text = '–ó–∞–¥–∞–Ω–∏–π –Ω–µ—Ç.';
                        } else {
                            vk_msg_send($peer_id, $text);
                        }
                    }
                } else {
                    if (mysqli_num_rows($query) == 0) {
                        vk_msg_send($peer_id, "–ü—Ä–∏–≤–µ—Ç! –ó–∞–π–¥–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ —Å–æ–∑–¥–∞–π —Å–≤–æ—é!\n\n–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å, —á—Ç–æ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –±–æ—Ç–∞ –Ω–∞ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–π –æ—Å–Ω–æ–≤–µ, –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ –Ω–µ—Å—É—Ç –Ω–∏–∫–∞–∫–æ–π –æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –µ—ë —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ—Å—ë—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Å–∞–º –∑–∞ –∫–∞–∂–¥–æ–µ —Å–≤–æ—ë –¥–µ–π—Å—Ç–≤–∏–µ.\n–¢–∞–∫–∂–µ –±–æ—Ç —Å–æ–±–∏—Ä–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ø—É–±–ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. –í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –±–æ—Ç—É –¥–ª—è —Ä–∞–±–æ—Ç—ã, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.", '{ 
							"one_time": false, 
							"buttons": [ 
							[
							{ 
							"action": { 
							"type": "text",
							"label": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",
							"payload": "{\"button\": \"join\"}"
							}, 
							"color": "primary" 
							},
							{ 
							"action": { 
							"type": "text",
							"label": "–°–æ–∑–¥–∞—Ç—å",
							"payload": "{\"button\": \"create\"}"
							}, 
							"color": "primary" 
							}] 
							] 
						}');
                        mysqli_query($link, "INSERT INTO `users`(`user_condition`, `vk_id`, `group_id`, `lesson`, `task`, `files`, `mass`) VALUES ('ready', '" . $from_id . "', '0', '', '', '', '0')");
                    } else {
                        if ($db['group_id'] == 0) {
                            if ($db['user_condition'] == 'ready') {
                                if ($payload == "join") {
                                    vk_msg_send($peer_id, '–ü–µ—Ä–µ—à–ª–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–æ–º –≥—Ä—É–ø–ø—ã.');
                                    mysqli_query($link, "UPDATE `users` SET `user_condition`='need_token' WHERE `vk_id` = '" . $from_id . "'");
                                } elseif ($payload == "create") {
                                    $group_token = md5($from_id . time());
                                    vk_msg_send($peer_id, '–ö–ª—é—á –≥—Ä—É–ø–ø—ã: ///' . $group_token . '///<br>–ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–≥–æ —Å–≤–æ–∏–º –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞–º –∏–ª–∏ –æ–¥–Ω–æ–∫—É—Ä—Å–Ω–∏–∫–∞–º!', $keyboards['main']);
                                    mysqli_query($link, "INSERT INTO `groups` SET `group_token`='" . $group_token . "', `group_name` = '', `group_description` = ''");
                                    $temp = mysqli_fetch_array(mysqli_query($link, "SELECT * FROM `groups` WHERE `group_token`='" . $group_token . "'"));
                                    mysqli_query($link, "UPDATE `users` SET `group_id`='" . $temp['group_id'] . "' WHERE `vk_id` = '" . $from_id . "'");
                                } else {
                                    vk_msg_send($peer_id, "–ü—Ä–∏–≤–µ—Ç! –ó–∞–π–¥–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ —Å–æ–∑–¥–∞–π —Å–≤–æ—é!", '{ 
										"one_time": false, 
										"buttons": [ 
										[
										{ 
										"action": { 
										"type": "text",
										"label": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",
										"payload": "{\"button\": \"join\"}"
										}, 
										"color": "primary" 
										},
										{ 
										"action": { 
										"type": "text",
										"label": "–°–æ–∑–¥–∞—Ç—å",
										"payload": "{\"button\": \"create\"}"
										}, 
										"color": "primary" 
										}] 
										] 
									} ');
                                }
                            }
                            if ($db['user_condition'] == 'need_token') {
                                $msg = mysqli_real_escape_string($link, $msg);
                                $temp = json_encode($updates[$c]);
                                $split = explode('\/\/\/', $temp);
                                if (isset($split[1])) {
                                    $msg = mysqli_real_escape_string($link, $split[1]);
                                }
                                $temp = mysqli_query($link, "SELECT * FROM `groups` WHERE `group_token`='" . $msg . "'");
                                if (mysqli_num_rows($temp) == 0) {
                                    vk_msg_send($peer_id, '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á.');
                                    mysqli_query($link, "UPDATE `users` SET `user_condition`='ready' WHERE `vk_id` = '" . $from_id . "'");
                                } else {
                                    vk_msg_send($peer_id, '–ì–æ—Ç–æ–≤–æ.', $keyboards['main']);
                                    $temp = mysqli_fetch_array($temp);
                                    mysqli_query($link, "UPDATE `users` SET `user_condition`='ready', `group_id` = '" . $temp['group_id'] . "' WHERE `vk_id` = '" . $from_id . "'");
                                }
                            }
                        } else {
                            if ($db['user_condition'] == 'ready') {
                                if ($payload == 'gdpr') {
                                    $time = time();
                                    $ex_time = time() + 600;
                                    $gdpr_token = md5(time() . $from_id . file_get_contents('php://input') . $ex_time);
                                    mysqli_query($link, "INSERT INTO `tokens` SET `vk_id` = '$from_id', `token` = '$gdpr_token', `time`= '$time', `expiration_time` = '$ex_time'");
                                    echo "\n".$time."\n";
                                    vk_msg_send($peer_id, "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –∑–Ω–∞–µ–º –æ –í–∞—Å –º–æ–∂–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç –ø–æ —Å—Å—ã–ª–∫–µ: <br>https://api.matveev.app/hw/GDPR.php?token=" . $gdpr_token . " <br><br>–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Å—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–µ—Ç, –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—É—é.<br><br>–ú—ã –æ–±—è–∑–∞–Ω—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –í–∞–º —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ì–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–≥–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ –æ –∑–∞—â–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (GDPR)");
                                }
                                if ($payload == 'zoom') {
                                    vk_msg_send($peer_id, "–ü–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.");
                                    vk_msg_send($peer_id, "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –∏–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –ø–∞–∫—Ä–æ–ª—å –æ—Ç –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏, –Ω–∞–ø–∏—Å–∞—Ç—å, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å –æ–± —É—Ä–æ–∫–µ", $keyboards['zoom']);
                                }
                                if ($payload == 'add') {
                                    vk_msg_send($peer_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞.', '{ 
									"one_time": false, 
									"buttons": [ 
									[{ 
									"action": { 
									"type": "text",
									"label": "–û—Ç–º–µ–Ω–∞",
									"payload": "{\"button\": \"cancel\"}"			
									}, 
									"color": "negative" 
									}] 
									] 
								}');
                                    mysqli_query($link, "UPDATE `users` SET `user_condition`='need_lesson' WHERE `vk_id` = '" . $from_id . "'");
                                }
                                if ($payload == 'get') {
                                    $temp = mysqli_query($link, "SELECT * FROM `homework` WHERE `group_id` = " . $db['group_id'] . " AND `to_time` > " . time() . " ORDER BY `homework`.`to_time` ASC");
                                    $text = '';
                                    while ($temp_msg = mysqli_fetch_assoc($temp)) {
                                        if ($temp_msg['files'] == '') {
                                            $text = $text . $temp_msg['lesson'] . '<br>' . $temp_msg['task'] . '<br> –ö ' . date('d.m.Y', $temp_msg['to_time']) . '<br> id –∑–∞–¥–∞–Ω–∏—è: ' . $temp_msg['db'] . '<br><br>';
                                        } else {
                                            $files_amount = count(explode(',', $temp_msg['files']));
                                            $text = $text . $temp_msg['lesson'] . '<br>' . $temp_msg['task'] . '<br>üìé –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ' . $files_amount . '<br> –ö ' . date('d.m.Y', $temp_msg['to_time']) . '<br> id –∑–∞–¥–∞–Ω–∏—è: ' . $temp_msg['db'] . '<br><br>';
                                        }
                                        if (mb_strlen($text) >= 900) {
                                            vk_msg_send($peer_id, $text);
                                            $text = '';
                                            $sent = '1';
                                        }
                                    }
                                    if ($text == '' and $sent != '1') {
                                        $text = '–ó–∞–¥–∞–Ω–∏–π –Ω–µ—Ç.';
                                        vk_msg_send($peer_id, $text);
                                    } else {
                                        vk_msg_send($peer_id, $text);
                                    }
                                }
                                if ($payload == 'settings') {
                                    vk_msg_send($peer_id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏.', '{ 
									"one_time": false, 
									"buttons": [ 
									[{ 
									"action": { 
									"type": "text",
									"label": "–ö–ª—é—á–∏",
									"payload": "{\"button\": \"keys\"}"
									}, 
									"color": "primary" 
									},
									{ 
									"action": { 
									"type": "text",
									"label": "GDPR",
									"payload": "{\"button\": \"gdpr\"}"			
									}, 
									"color": "primary" 
									}
									],
									[{ 
									"action": { 
									"type": "text",
									"label": "–†–∞—Å—Å—ã–ª–∫–∞",
									"payload": "{\"button\": \"mass\"}"	
									}, 
									"color": "primary" 
									},
									{ 
									"action": { 
									"type": "text",
									"label": "–ù–∞–∑–∞–¥",
									"payload": "{\"button\": \"cancel\"}"			
									}, 
									"color": "negative" 
									}]
									] 
								}');
                                }
                                if ($payload == 'keys') {
                                    vk_msg_send($peer_id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏.', '{ 
									"one_time": false, 
									"buttons": [ 
									[{ 
									"action": { 
									"type": "text",
									"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–ª—é—á",
									"payload": "{\"button\": \"watch_key\"}"					
									}, 
									"color": "primary" 
									},
									{ 
									"action": { 
									"type": "text",
									"label": "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å",
									"payload": "{\"button\": \"gen_key\"}"			
									}, 
									"color": "primary" 
									}],
									[{ 
									"action": { 
									"type": "text",
									"label": "–í—ã–π—Ç–∏",
									"payload": "{\"button\": \"exit_group\"}"			
									}, 
									"color": "primary" 
									},
									{ 
									"action": { 
									"type": "text",
									"label": "–ù–∞–∑–∞–¥",
									"payload": "{\"button\": \"cancel\"}"				
									}, 
									"color": "negative" 
									}]
									] 
								}');
                                }
                                if ($payload == 'watch_key') {
                                    $temp = mysqli_fetch_array(mysqli_query($link, "SELECT * FROM `groups` WHERE `group_id` = '" . $db['group_id'] . "'"));
                                    vk_msg_send($peer_id, '–ö–ª—é—á –≥—Ä—É–ø–ø—ã:<br>///' . $temp['group_token'] . '///');
                                }
                                if ($payload == 'mass') {
                                    mysqli_query($link, "UPDATE `users` SET `user_condition`='need_mass' WHERE `vk_id` = '" . $from_id . "'");
                                    vk_msg_send($peer_id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.<br>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –í–∞—à–µ–π –≥—Ä—É–ø–ø—ã.<br>–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∏ –¥–æ –¥–µ—Å—è—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.', '{ 
									"one_time": false, 
									"buttons": [ 
									[{ 
									"action": { 
									"type": "text",
									"label": "–û—Ç–º–µ–Ω–∞",
									"payload": "{\"button\": \"cancel\"}"
									}, 
									"color": "negative" 
									}] 
									] 
								}');
                                }
                                if ($payload == 'gen_key') {
                                    $group_token = md5($from_id . time());
                                    mysqli_query($link, "UPDATE `groups` SET `group_token`='" . $group_token . "' WHERE `group_id` = '" . $db['group_id'] . "'");
                                    vk_msg_send($peer_id, '–ù–æ–≤—ã–π –∫–ª—é—á –≥—Ä—É–ø–ø—ã:<br>///' . $group_token . '///');
                                }
                                if ($payload == 'delete') {
                                    vk_msg_send($peer_id, '–í–≤–µ–¥–∏—Ç–µ id –∑–∞–¥–∞–Ω–∏—è', '{ 
									"one_time": false, 
									"buttons": [ 
									[{ 
									"action": { 
									"type": "text",
									"label": "–û—Ç–º–µ–Ω–∞",
									"payload": "{\"button\": \"cancel\"}"
									}, 
									"color": "negative" 
									}] 
									] 
								}');
                                    mysqli_query($link, "UPDATE `users` SET `user_condition` = 'need_id' WHERE `vk_id` = '" . $from_id . "'");
                                }
                                if ($payload == 'exit_group') {
                                    mysqli_query($link, "UPDATE `users` SET `group_id` = '0' WHERE `vk_id` = '" . $from_id . "'");
                                    vk_msg_send($peer_id, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –≥—Ä—É–ø–ø—ã.', '{ 
									"one_time": false, 
									"buttons": [ 
									[
									{ 
									"action": { 
									"type": "text",
									"label": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",
									"payload": "{\"button\": \"join\"}"		
									}, 
									"color": "primary" 
									},
									{ 
									"action": { 
									"type": "text",
									"label": "–°–æ–∑–¥–∞—Ç—å",
									"payload": "{\"button\": \"create\"}"
									}, 
									"color": "primary" 
									}] 
									] 
								}');
                                }
                                if ($payload == 'get_file') {
                                    vk_msg_send($peer_id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ ID –∑–∞–¥–∞–Ω–∏—è.", '{ 
									"one_time": false, 
									"buttons": [ 
									[{ 
									"action": { 
									"type": "text",
									"label": "–û—Ç–º–µ–Ω–∞",
									"payload": "{\"button\": \"cancel\"}"
									}, 
									"color": "negative" 
									}] 
									] 
								}');
                                    mysqli_query($link, "UPDATE `users` SET `user_condition` = 'need_file_id' WHERE `vk_id` = '" . $from_id . "'");
                                }
                            } elseif ($db['user_condition'] == 'need_id' and $payload != 'cancel') {
                                $id = mysqli_real_escape_string($link, $msg);
                                $temp = mysqli_fetch_array(mysqli_query($link, "SELECT * FROM `homework` WHERE `db` = '" . $id . "'"));
                                if ($temp['group_id'] == $db['group_id']) {
                                    mysqli_query($link, "DELETE FROM `homework` WHERE `db` = '" . $id . "'");
                                    mysqli_query($link, "UPDATE `users` SET `user_condition` = 'ready' WHERE `vk_id` = '" . $from_id . "'");
                                    vk_msg_send($peer_id, '–£–¥–∞–ª–µ–Ω–æ', $keyboards['main']);
                                } else {
                                    mysqli_query($link, "UPDATE `users` SET `user_condition` = 'ready' WHERE `vk_id` = '" . $from_id . "'");
                                    vk_msg_send($peer_id, '–ó–∞–¥–∞–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –Ω–µ –∫ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ, –ª–∏–±–æ –±—ã–ª–æ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ', $keyboards['main']);
                                }
                            } elseif ($db['user_condition'] == 'need_lesson' and $payload != 'cancel') {
                                vk_msg_send($peer_id, "–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ. \n–ú–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –¥–æ 10 —Ñ–∞–π–ª–æ–≤. –û–Ω–∏ –ø—Ä–æ–π–¥—É—Ç –ø—Ä–æ–≤–µ—Ä–∫—É, –∏ –ø—Ä–∏–∫—Ä–µ–ø—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ—à–µ–¥—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫—É.\n–†–∞–∑–º–µ—Ä –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 19 –º–µ–≥–∞–±–∞–π—Ç.\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–æ–∂–µ—Ç –¥–ª–∏—Ç—å—Å—è –¥–æ 15 –º–∏–Ω—É—Ç.");
                                $stmt = $link->prepare("UPDATE `users` SET `user_condition` = 'need_task', `lesson` = ? WHERE `vk_id` = ?");
                                $stmt->bind_param('si', $msg, $from_id);
                                $stmt->execute();
                            } elseif ($db['user_condition'] == 'need_file_id' and $payload != 'cancel') {
                                mysqli_query($link, "UPDATE `users` SET `user_condition` = 'ready' WHERE `vk_id` = '" . $from_id . "'");
                                vk_msg_send($peer_id, "–í—ã –ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤.", $keyboards['main']);
                                $task_id = mysqli_real_escape_string($link, $msg);
                                bgexec('php fork_send.php '.$task_id.' '.$from_id);
                            } elseif ($db['user_condition'] == 'need_task' and $payload != 'cancel') {
                                if (isset($updates[$c]->object->message->attachments)) {
                                    $files = json_encode($updates[$c]->object->message->attachments);
                                } else {
                                    $files = '';
                                }
                                vk_msg_send($peer_id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É<br>–§–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì–ì–ì');
                                $stmt = $link->prepare("UPDATE `users` SET `user_condition` = 'need_date', `task` = ?, `files` = ?  WHERE `vk_id` = ?");
                                $stmt->bind_param('ssi', $msg, $files, $from_id);
                                $stmt->execute();
                            } elseif ($db['user_condition'] == 'need_date' and $payload != 'cancel') {
                                $date = mysqli_real_escape_string($link, $msg);
                                $check = explode('.', $date);
                                if (is_numeric($check[0]) and is_numeric($check[1]) and is_numeric($check[2]) and $check[1] > 0 and $check[1] < 13 and $check[2] > 2018 and $check[2] < 2038 and (($check[0] < 32 and ($check[1] == '01' or $check[1] == '03' or $check[1] == '05' or $check[1] == '07' or $check[1] == '08' or $check[1] == '12' or $check[1] == '10')) or ($check[0] < 31 and ($check[1] == '04' or $check[1] == '06' or $check[1] == '09' or $check[1] == '11' or $check[1] == '08' or $check[1] == '12')) or ($check[0] < 30 and $check[2] % 4 == 0) or ($check[0] < 29 and ($check[2] % 4 != 0)))) {
                                    $date = strtotime($date) + 64800;
                                    $llll = '';
                                    $stmt = $link->prepare("INSERT INTO `homework`(`lesson`, `task`, `to_time`, `from_time`, `group_id`, `files`) VALUES (?,?,?,?,?,?)");
                                    $stmt->bind_param('ssiiis', $db['lesson'], $db['task'], $date, time(), $db['group_id'],$llll);
                                    $stmt->execute();
                                    $task_id = $stmt->insert_id;
                                    if ($db['files'] != '') {
                                        bgexec('php add_files.php '.$task_id.' '.$db['group_id'].' '.urlencode($db['files']));
                                    }
                                    mysqli_query($link, "UPDATE `users` SET `user_condition` = 'ready', `task` = '', `lesson` = '', `files` = '' WHERE `vk_id` = '" . $from_id . "'");
                                    vk_msg_send($peer_id, '–ì–æ—Ç–æ–≤–æ.', $keyboards['main']);
                                } else {
                                    vk_msg_send($peer_id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –µ—â—ë —Ä–∞–∑.<br>–î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <br> 01.01.2019');
                                }
                            } elseif ($db['user_condition'] == 'need_mass' and $payload != 'cancel') {
                                if ($db['mass'] > time()) {
                                    vk_msg_send($peer_id, '–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑ –≤ —á–∞—Å.');
                                } else {
                                    mysqli_query($link, "UPDATE `users` SET `user_condition` = 'ready', `mass` = " . (time() + 3600) . " WHERE `vk_id` = '" . $from_id . "'");
                                    $msg = '–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç vk.com/id' . $from_id . ' : ' . $msg;
                                    $files = '';
                                    if (isset($updates[$c]->object->message->attachments)) {
                                        $files = json_encode($updates[$c]->object->message->attachments);
                                    }
                                    vk_msg_send($peer_id, "–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å.\n–°–∫–æ—Ä–æ –µ—ë —É–≤–∏–¥—è—Ç –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã.", $keyboards['main']);
                                    bgexec('php mass_fork.php '.$db['group_id'].' '.urlencode($msg).' '.urlencode($files));
                                }
                            }
                            if ($payload == 'cancel') {
                                mysqli_query($link, "UPDATE `users` SET `user_condition` = 'ready', `task` = '', `lesson` = '' WHERE `vk_id` = '" . $from_id . "'");
                                vk_msg_send($peer_id, '–ì–æ—Ç–æ–≤–æ.', $keyboards['main']);
                            }
                            if ( $msg == "–º–µ–Ω—é" ){
                                vk_msg_send($peer_id, '–ì–æ—Ç–æ–≤–æ.', $keyboards['main']);
                            }
                        }
                    }
                }
            }
            $c++;
        }
    }
}
?>